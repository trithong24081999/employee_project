
version: '3.9'
services:
  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: ghc
      POSTGRES_USER: project
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
    networks:
      - app_net


  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DB_NAME=ghc
      - DB_USER=project
      - DB_PASSWORD=123456
      - DB_HOST=db
    networks:
      - app_net

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"     # AMQP
      - "15672:15672"   # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_net
  consumer1:
    build:
      context: .
      dockerfile: employees/e_feature/rabbitmq/consumers/Dockerfile
    command: python employees/e_feature/rabbitmq/consumers/consumer_1.py
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: always 
    environment:
      - DB_NAME=ghc
      - DB_USER=project
      - DB_PASSWORD=123456
      - PYTHONUNBUFFERED=1

      - DB_HOST=db
      - DJANGO_SETTINGS_MODULE=employee_project.settings
    networks:
      - app_net
  consumer2:
    build:
      context: .
      dockerfile: employees/e_feature/rabbitmq/consumers/Dockerfile
    command: python employees/e_feature/rabbitmq/consumers/consumer_2.py
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: always 
    environment:
      - DB_NAME=ghc
      - DB_USER=project
      - DB_PASSWORD=123456
      - PYTHONUNBUFFERED=1

      - DB_HOST=db
      - DJANGO_SETTINGS_MODULE=employee_project.settings
    networks:
      - app_net
volumes:
  postgres_data:
  rabbitmq_data:

networks:
  app_net:

